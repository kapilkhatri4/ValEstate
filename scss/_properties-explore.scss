@use 'abstracts' as *;
@use 'base' as *;

.properties {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: 3fr;
  grid-column-gap: 2rem;
  grid-row-gap: 2rem;
  padding-bottom: 12rem;
  @include mq(large) {
    grid-template-columns: repeat(2, 1fr);
  }
  @include mq(medium) {
    grid-template-columns: 1fr;
    .property-box {
      display: grid;
      grid-template-columns: repeat(3, 1fr);
      grid-column: 1/3;
      .property-img {
        grid-column: 1/3;
      }
    }
  }
  @include mq(small) {
    grid-template-columns: repeat(1, 1fr);
    grid-template-rows: 3fr;
    .property-box {
      display: grid;
      grid-template-columns: repeat(1, 1fr);

      .property-img {
        grid-column: 1/3;
      }
    }
  }
  .property-box {
    border: 1px solid rgba($primary-dark, 0.2);
    @include transition;
    .property-img {
      width: 100%;
      overflow: hidden;
      position: relative;
      img {
        width: 100%;
        height: 19rem;
        object-fit: cover;
        @include transition;
      }
      .prop-detail {
        position: absolute;
        bottom: 0;
        display: flex;
        justify-content: space-between;
        padding: 1rem;
        width: 100%;
        height: 100%;
        color: $secondary-light;
        opacity: 0;
        transform: translateY(-100px);
        @include transition;

        .price {
          font-size: 2rem;
        }
        a {
          color: $secondary-light;
        }
      }
    }
    .property-items {
      padding: 1rem;
      .prop-type {
        font-size: 1rem;
        color: $primary-light;
      }
      .prop-location {
        font-size: 1.2rem;
        font-weight: 700;
        a {
          color: $primary-dark;
        }
      }
      .prop-features {
        display: flex;
        justify-content: space-between;
        i {
          color: $primary-light;
          font-size: 1.2rem;
        }
        p {
          color: $primary-dark;
          font-weight: 400;
        }
      }
    }
    &:hover {
      box-shadow: 0px 0px 1rem rgba($primary-dark, 0.3);
      img {
        transform: scale(1.2);
        filter: blur(1px);
      }
      .prop-detail {
        transform: translateY(0);
        opacity: 1;
        background-color: rgba($primary-dark, 0.3);
      }
    }
  }
  .view-prop {
    justify-self: center;
    grid-column: 2/3;
  }
  @include mq(medium) {
    .property-box {
      .prop-features {
        flex-direction: column;
      }
    }
  }
  @include mq(small) {
    .property-box {
      .prop-features {
        flex-direction: row;
      }
    }
  }
}

// explore properties
.explore {
  background-color: rgba($primary-light, 0.2);

  .explore-item-type {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: 1fr;

    .explore-items {
      display: flex;
      justify-content: center;
      align-items: center;
      flex-direction: column;
      padding: 1rem;
      position: relative;
      @include transition;
      &::after {
        content: '';
        position: absolute;
        width: 2px;
        height: 100%;
        right: 0;
        top: 0;
        background: linear-gradient(
          to bottom,
          transparent,
          rgba($primary-dark, 0.2),
          transparent
        );
      }
      &:nth-child(1),
      &:nth-child(3) {
        &::before {
          content: '';
          position: absolute;
          width: 2px;
          height: 100%;
          left: 0;
          top: 0;
          background: linear-gradient(
            to bottom,
            transparent,
            rgba($primary-dark, 0.2),
            transparent
          );
        }
      }
      &:hover {
        background-color: (rgba($primary-light, 0.2));
      }
    }
    .type {
      width: fit-content;
      padding: 0.5rem;
      text-align: center;
      img {
        width: 4rem;
      }
    }
    .icon-text,
    .icon {
      color: $primary-light;
      // text-decoration: none;
      font-size: 1.2rem;
    }
    .icon i {
      font-size: 4rem;
    }
    .counter {
      font-size: 2rem;
      color: $primary-dark;
    }
  }
  @include mq(medium) {
    .explore-item-type {
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      grid-template-rows: 1fr;
    }
  }
}
